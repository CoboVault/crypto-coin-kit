name: crypto-coinlkit Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Dump context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: git branch --contains ${{github.sha}} | grep master
      # - name: Checkout code
      #   uses: actions/checkout@v2
      #   with:
      #     ref: master
      # - name: Use Node.js 10.x
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: 10.x
      # - name: Build project # This would actually build your project, using zip for an example artifact
      #   run: |
      #     sh ./build.sh
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: ${{ github.ref }}
      #     draft: false
      #     prerelease: false
      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
      #     asset_path: ./release.tgz
      #     asset_name: release.tgz
      #     asset_content_type: application/tar+gzip
